import React from 'react'
import './ChatComponent.css'
export default function ChatComponent(props) {
    const chats = "Interviewer: What's your experience with working on backend projects? \nCandidate: \n    I have experience working on backend projects through my internships at Crescer AI and Code For Government Tech (C4GT). At Crescer AI, I worked on bathymetric lidar point cloud segmentation and achieved 95%+ accuracy for various locations. I also developed an active learning system to continually improve the model for new data. Additionally, I implemented VAEs and its variations for drift detection and imputation.\n    At C4GT, I created a backend for Machine Learning Platform app which leverages tensorflow and django libraries to automatically generate models, perform data transformation,train them and deploy them for prediction.\n    I also have experience with web development through my project Notes Generator (https://github.com/pSN0W/notes-generator) where I automated the conversion of normal markdown notes into flowchart with option to hide details on topics. The project also provides easy customisation of flowchart.\n    In terms of blockchain, I have experience as an open source contributor for Mango Market and contributing to solcpp, a c++ sdk for solana. The sdk allows C++ users to connect with solana blockchain and use web3.js functionality in C++. I also implemented websocket using beast library in C++. Used promises and futures to maintain concurrency between threads. Allows users to connect to solana websocket and call a callback whenever data changes.\n    Overall, my experience with backend projects includes working on various projects that required the development of algorithms, models, and web applications. I am confident that this experience will be valuable in the role you are applying for. \nEvaluator: {'technical_skill': 9, 'relevance': 10, 'leadership': None, 'collaberation': None, 'reason': ''}, weightage: {'complexity': 8, 'uniqueness': 7, 'reason': 'The project is a web application that converts markdown notes into flowcharts using React and Django. The idea of the project is unique as it addresses the problem of creating class and use case diagrams efficiently and fun. The features of the project are also unique such as customizing the look of the flowchart and sharing notes globally or with friends. However, the technical complexity of the project is high due to the use of multiple technologies and libraries.', 'reference': 'https://github.com/pSN0W/notes-generator'}, final score = {'technical_skill': 6.75, 'relevance': 7.5, 'leadership': None, 'collaberation': None, 'reason': ''} \nInterviewer: Can you describe your experience with machine learning algorithms and techniques? \nCandidate: \n    Yes, I have experience working with various machine learning algorithms and techniques. During my internship at Crescer AI, I worked on bathymetric lidar point cloud segmentation using deep learning techniques and achieved 95%+ accuracy for various locations. I also developed an active learning system to continually improve the model for new data. Additionally, I implemented VAEs and its variations for drift detection and imputation.\n    Furthermore, during my XROS fellowship at GmetriXR, I worked on generating a metaverse using openai APIs and FastAPI. This involved interacting with GPT-3.5 model to automatically generate metaverse using the information provided by clients. I also used various scraping scripts to get additional information from URIs.\n    Additionally, during my software engineering internship at SamagraX, I worked on fine tuning various open source models and using them for DPG projects. This included working on a recommendation system for fertilizers using metarank, GandhiJi voice clone using eleven labs, and a chat bot for Kerala farmers using audio from krishi support phone calls.\n    In terms of technical skills, I have experience with deep learning, machine learning, web development, terminal app development, and blockchain. I am proficient in languages such as C, C++, Java, Python, JavaScript, and Rust. \nEvaluator: {'technical_skill': 9, 'relevance': 10, 'leadership': None, 'collaberation': None, 'reason': ''}, weightage: {'complexity': 10, 'uniqueness': 10, 'reason': 'Candidate refered their work experience', 'reference': 'work'}, final score = {'technical_skill': 9.0, 'relevance': 10.0, 'leadership': None, 'collaberation': None, 'reason': ''} \nInterviewer: How do you approach problem-solving in software development? \nCandidate: \n    As a software engineering intern, I have worked on various projects where I had to solve complex problems. My approach to problem-solving in software development involves the following steps:\n    1. Understanding the problem: Before starting any solution, I first understand the problem statement and requirements. I try to break down the problem into smaller parts and identify the key components that need to be addressed.\n    2. Research and Analysis: Once I have a clear understanding of the problem, I research and analyze different approaches and solutions available for the same. I also look for any existing libraries or frameworks that can help me solve the problem more efficiently.\n    3. Design and Planning: After analyzing the different solutions, I design a plan to solve the problem. This involves creating a high-level architecture of the solution, identifying the key components, and defining the interfaces between them.\n    4. Implementation and Testing: Once the design is finalized, I start implementing the solution using the chosen programming language and framework. During implementation, I also write unit tests to ensure that the code works as expected. After the implementation is complete, I perform integration testing to ensure that all the components work together seamlessly.\n    5. Deployment and Maintenance: Once the solution is tested and verified, it is deployed to the production environment. I also provide documentation and support for the solution to ensure that it can be easily maintained and updated in the future.\n    In my previous projects, I have used various programming languages and frameworks such as Python, Java, JavaScript, Rust, Django, TensorFlow, and Solana. I am confident that I can apply these skills to solve any software development problem that comes my way. \nEvaluator: {'technical_skill': 9, 'relevance': 10, 'leadership': None, 'collaberation': None, 'reason': ''}, weightage: {'complexity': 4, 'uniqueness': 4, 'reason': \"Candidate didn't refer anything\", 'reference': 'none'}, final score = {'technical_skill': 3.6, 'relevance': 4.0, 'leadership': None, 'collaberation': None, 'reason': ''} \nInterviewer: Have you worked with any design patterns, specifically SOLID? If so, can you provide an example of how you implemented them? \nCandidate: \n    Yes, I have worked with SOLID design patterns. Specifically, I have implemented the Singleton pattern in my Notes Generator project (<https://github.com/pSN0W/notes-generator>). The Singleton pattern ensures that a class has only one instance and provides a global point of access to it. In this project, I used the Singleton pattern to ensure that the flowchart generation process is centralized and can be easily accessed by other parts of the application.\n\n    Additionally, I have also implemented the Factory pattern in my Warehouse Layout Optimisation project (<https://github.com/pSN0W/warehouse-optimisation>). The Factory pattern provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created. In this project, I used the Factory pattern to create different types of warehouse layouts based on user input and preferences.\n\n    As for references, I can provide you with the links to the respective projects mentioned above. \nEvaluator: {'technical_skill': 8, 'relevance': 10, 'leadership': None, 'collaberation': None, 'reason': ''}, weightage: {'complexity': 8, 'uniqueness': 7, 'reason': 'The project is a web application that converts markdown notes into flowcharts using React and Django. The idea of the project is unique as it addresses the problem of creating class and use case diagrams efficiently and fun. The features of the project are also unique such as customizing the look of the flowchart and sharing notes globally or with friends. However, the technical complexity of the project is high due to the use of multiple technologies and libraries.', 'reference': 'https://github.com/pSN0W/notes-generator'}, final score = {'technical_skill': 6.0, 'relevance': 7.5, 'leadership': None, 'collaberation': None, 'reason': ''} \n"

    return (
        <div class="chat-box">
            <pre>
                {chats}
            </pre>
        </div>
    )
}
